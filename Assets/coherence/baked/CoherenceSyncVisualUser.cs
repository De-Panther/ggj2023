// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_0adf2717_64ba_4a79_9ef9_d192c14fcf83 : BoolBinding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override bool Value
		{
			get => (bool)(System.Boolean)(CastedUnityComponent.controllerLeftEnable);
			set => CastedUnityComponent.controllerLeftEnable = (System.Boolean)(value);
		}

		protected override bool ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerLeftEnable;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerLeftEnable = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_2edcbe1f_1b84_4bcd_8584_7a1d2a3e3d69 : BoolBinding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000000010;

		public override bool Value
		{
			get => (bool)(System.Boolean)(CastedUnityComponent.controllerRightEnable);
			set => CastedUnityComponent.controllerRightEnable = (System.Boolean)(value);
		}

		protected override bool ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerRightEnable;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerRightEnable = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_61fca17a_7894_457b_9e8a_b28b8502e60a : Vector3Binding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000000100;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(CastedUnityComponent.controllerLeftPosition);
			set => CastedUnityComponent.controllerLeftPosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerLeftPosition;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerLeftPosition = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_4ffef9a0_3ee7_416f_af14_17087dcf962c : QuaternionBinding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000001000;

		public override Quaternion Value
		{
			get => (Quaternion)(UnityEngine.Quaternion)(CastedUnityComponent.controllerLeftRotation);
			set => CastedUnityComponent.controllerLeftRotation = (UnityEngine.Quaternion)(value);
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerLeftRotation;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerLeftRotation = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_8126f34e_05fe_4ad7_b739_85ba84dd5d49 : Vector3Binding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000010000;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(CastedUnityComponent.controllerRightPosition);
			set => CastedUnityComponent.controllerRightPosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerRightPosition;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerRightPosition = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}

	public class Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_b3500e7e_f654_483d_9196_e633b1a80b8e : QuaternionBinding
	{
		private VisualUser CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (VisualUser)UnityComponent;
		}
		public override string CoherenceComponentName => "VisualUser_VisualUser_2895662808262937726";

		public override uint FieldMask => 0b00000000000000000000000000100000;

		public override Quaternion Value
		{
			get => (Quaternion)(UnityEngine.Quaternion)(CastedUnityComponent.controllerRightRotation);
			set => CastedUnityComponent.controllerRightRotation = (UnityEngine.Quaternion)(value);
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			return update.controllerRightRotation;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (VisualUser_VisualUser_2895662808262937726)coherenceComponent;
			update.controllerRightRotation = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new VisualUser_VisualUser_2895662808262937726();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'VisualUser' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncVisualUser : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncVisualUser>();
			if (coherenceSync.TryGetBindingByGuid("0adf2717-64ba-4a79-9ef9-d192c14fcf83", "controllerLeftEnable", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftEnable))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_0adf2717_64ba_4a79_9ef9_d192c14fcf83();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftEnable.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftEnable)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerLeftEnable");
			}
			if (coherenceSync.TryGetBindingByGuid("2edcbe1f-1b84-4bcd-8584-7a1d2a3e3d69", "controllerRightEnable", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightEnable))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_2edcbe1f_1b84_4bcd_8584_7a1d2a3e3d69();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightEnable.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightEnable)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerRightEnable");
			}
			if (coherenceSync.TryGetBindingByGuid("61fca17a-7894-457b-9e8a-b28b8502e60a", "controllerLeftPosition", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftPosition))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_61fca17a_7894_457b_9e8a_b28b8502e60a();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftPosition.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftPosition)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerLeftPosition");
			}
			if (coherenceSync.TryGetBindingByGuid("4ffef9a0-3ee7-416f-af14-17087dcf962c", "controllerLeftRotation", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftRotation))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_4ffef9a0_3ee7_416f_af14_17087dcf962c();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftRotation.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerLeftRotation)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerLeftRotation");
			}
			if (coherenceSync.TryGetBindingByGuid("8126f34e-05fe-4ad7-b739-85ba84dd5d49", "controllerRightPosition", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightPosition))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_8126f34e_05fe_4ad7_b739_85ba84dd5d49();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightPosition.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightPosition)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerRightPosition");
			}
			if (coherenceSync.TryGetBindingByGuid("b3500e7e-f654-483d-9196-e633b1a80b8e", "controllerRightRotation", out Binding InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightRotation))
			{
				var clone = new Binding_3d8e0d6bf6d1f18448fd5924dc4297a2_b3500e7e_f654_483d_9196_e633b1a80b8e();
				InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightRotation.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalVisualUser_VisualUser_2895662808262937726_VisualUser_VisualUser_2895662808262937726_controllerRightRotation)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (VisualUser).controllerRightRotation");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				default:
					logger.Warning($"[CoherenceSyncVisualUser] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
